<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropper/4.0.0/cropper.min.js"></script>

<main class="page">
	<h2>Upload ,Crop and save.</h2>
	<!-- input file -->
	<div class="box">
		<input type="file" id="file-input">
	</div>
	<!-- leftbox -->
	<div class="box-2">
		<div class="result"></div>
	</div>
	<!--rightbox-->
	<div class="box-2 img-result hide">
		<!-- result of crop -->
		<img class="cropped" src="" alt="">
	</div>
	<!-- input file -->
	<div class="box">
		<div class="options hide">
			<label> Width</label>
			<input type="number" class="img-w" value="300" min="100" max="1200" />
		</div>
		<!-- save btn -->
		<button class="btn save hide">Save</button>
		<!-- download btn -->
		<a href="" class="btn download hide">Download</a>
	</div>
</main>


<main class="page1">
	<h2>Upload ,Crop and save.</h2>
	<!-- input file -->
	<div class="box1">
		<input type="file" id="file-inp">
	</div>
	<!-- leftbox -->
	<div class="box-21">
		<div class="res"></div>
	</div>
	<!--rightbox-->
	<div class="box-21 img-res hide">
		<!-- result of crop -->
		<img class="crop" src="" alt="">
	</div>
	<!-- input file -->
	<div class="box1">
		<div class="opt hide">
			<label> Width</label>
			<input type="number" class="imgw" value="300" min="100" max="1200" />
		</div>
		<!-- save btn -->
		<button class="btn1 sav hide1">Save</button>
		<!-- download btn -->
		<a href="" class="btn 1downl hide1">Download</a>
	</div>
</main>



<style>
 
.page {
	margin: 1em auto;
	max-width: 500px;
	display: flex;
	align-items: flex-start;
	flex-wrap: wrap;
	height: 100%;
}

.box {
	padding: 0.5em;
	width: 100%;
	margin:0.5em;
}

.box-2 {
	padding: 0.5em;
	width: calc(100%/2 - 1em);
}

.options label,
.options input{
	width:4em;
	padding:0.5em 1em;
}
.btn{
	background:white;
	color:black;
	border:1px solid black;
	padding: 0.5em 1em;
	text-decoration:none;
	margin:0.8em 0.3em;
	display:inline-block;
	cursor:pointer;
}

.hide {
	display: none;
}

img {
	max-width: 100%;
}
<style>
 
.page1 {
	margin: 1em auto;
	max-width: 500px;
	display: flex;
	align-items: flex-start;
	flex-wrap: wrap;
	height: 100%;
}

.box1 {
	padding: 0.5em;
	width: 100%;
	margin:0.5em;
}

.box-21 {
	padding: 0.5em;
	width: calc(100%/2 - 1em);
}

.options1 label,
.options1 input{
	width:4em;
	padding:0.5em 1em;
}
.btn1{
	background:white;
	color:black;
	border:1px solid black;
	padding: 0.5em 1em;
	text-decoration:none;
	margin:0.8em 0.3em;
	display:inline-block;
	cursor:pointer;
}

.hide1 {
	display: none;
}

img1 {
	max-width: 100%;
}




</style>
<script>
  // vars
let res = document.querySelector('.res'),
img_res = document.querySelector('.img-res'),
imgw = document.querySelector('.imgw'),
imgh = document.querySelector('.imgh'),
opt = document.querySelector('.opt'),
sav = document.querySelector('.sav'),
crop = document.querySelector('.crop'),
dwnl = document.querySelector('.downl'),
upl = document.querySelector('#file-inp'),


// on change show image with crop options
upl.addEventListener('change', (e) => {
  if (e.target.files.length) {
		// start file reader
    const reader = new FileReader();
    reader.onload = (e)=> {
      if(e.target.res){
				// create new image
				let img = document.createElement('img');
				img.id = 'image';
				img.src = e.target.res
				// clean result before
				res.innerHTML = '';
				// append new image
        res.appendChild(img);
				// show save btn and options
				sav.classList.remove('hide');
				opt.classList.remove('hide');
				// init cropper
				cropper = new Cropper(img);
      }
    };
    reader.readAsDataURL(e.target.files[0]);
  }
});

// save on click
save.addEventListener('click',(e)=>{
  e.preventDefault();
  // get result to data uri
  let imgSrc = crop.getCroppedCanvas({
		width: imgw.value // input value
	}).toDataURL();
  // remove hide class of img
  crop.classList.remove('hide');
	img_res.classList.remove('hide');
	// show image cropped
  crop.src = imgSrc;
  dwn.classList.remove('hide');
  dwn.download = 'imagename.png';
  dwn.setAttribute('href',imgSrc);
});

</script>




<script>
  // vars
let result = document.querySelector('.result'),
img_result = document.querySelector('.img-result'),
img_w = document.querySelector('.img-w'),
img_h = document.querySelector('.img-h'),
options = document.querySelector('.options'),
save = document.querySelector('.save'),
cropped = document.querySelector('.cropped'),
dwn = document.querySelector('.download'),
upload = document.querySelector('#file-input'),
cropper = '';

// on change show image with crop options
upload.addEventListener('change', (e) => {
  if (e.target.files.length) {
		// start file reader
    const reader = new FileReader();
    reader.onload = (e)=> {
      if(e.target.result){
				// create new image
				let img = document.createElement('img');
				img.id = 'image';
				img.src = e.target.result
				// clean result before
				result.innerHTML = '';
				// append new image
        result.appendChild(img);
				// show save btn and options
				save.classList.remove('hide');
				options.classList.remove('hide');
				// init cropper
				cropper = new Cropper(img);
      }
    };
    reader.readAsDataURL(e.target.files[0]);
  }
});

// save on click
save.addEventListener('click',(e)=>{
  e.preventDefault();
  // get result to data uri
  let imgSrc = cropper.getCroppedCanvas({
		width: img_w.value // input value
	}).toDataURL();
  // remove hide class of img
  cropped.classList.remove('hide');
	img_result.classList.remove('hide');
	// show image cropped
  cropped.src = imgSrc;
  dwn.classList.remove('hide');
  dwn.download = 'imagename.png';
  dwn.setAttribute('href',imgSrc);
});

</script>